name: Node.js CI

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["*"]

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm ci

            - name: Build
              run: |
                  export NODE_OPTIONS="--max_old_space_size=4096"
                  npm run build && npm run build:all
              # set the environmental variable WIREIT_CACHE="local" so that the wireit cache is saved in the .wireit directory.
              env:
                  WIREIT_CACHE: "local"

            - name: Debug Build Artifacts
              run: |
                  ls -la ./packages/*/.wireit/ || echo "No .wireit directory in parser"
                  du -sh ./packages/*/.wireit/*/

            # upload all the .wireit directories so that the test job can use them.
            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  include-hidden-files: true
                  # Include package.json from the root so the file tree matches the full file tree of the repo
                  # (otherwise everything is normalized to the closest common ancestor folder)
                  path: |
                      ./packages/*/.wireit/**/*
                      ./package.json

    test:
        name: Test
        runs-on: ubuntu-latest
        needs: build
        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm ci
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-artifacts

            - name: Debug Build Artifacts
              run: |
                  ls -la ./packages/*/.wireit/ || echo "No .wireit directory in parser"

            # with the wireit cache saved, this build step should be fast.
            - name: Build (cached)
              run: |
                  export NODE_OPTIONS="--max_old_space_size=4096"
                  npm run build
              env:
                  WIREIT_CACHE: "local"

            - name: Test
              run: npm test

    lint:
        name: Lint Rust Code
        runs-on: ubuntu-latest

        steps:
            - name: Checkout sources
              uses: actions/checkout@v3

            - name: Install toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
                  components: rustfmt, clippy

            - name: Cargo fmt
              working-directory: ./packages/doenetml-worker
              run: cargo fmt --all -- --check

            - name: Cargo clippy
              working-directory: ./packages/doenetml-worker
              run: cargo clippy -- -D warnings

    build-docs:
        runs-on: ubuntu-latest
        needs: build
        name: Build Docs

        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm ci

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-artifacts
                  path: ./

            # with the wireit cache saved, this build step should be fast.
            - name: Build Docs
              run: |
                  export NODE_OPTIONS="--max_old_space_size=4096"
                  cd packages/doenetml
                  npm run build
                  cd ../docs-nextra
                  npm run build
              env:
                  WIREIT_CACHE: "local"

    lint-ts:
        name: Lint Typescript Code
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - name: Checkout sources
              uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm ci

            - name: Prettier Check
              run: npx prettier . --check --ignore-path ./.prettierignore --ignore-path ./.prettierignoreci
