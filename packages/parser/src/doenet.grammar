/*
 * Modified version of lezer-xml that accepts more html-like identifiers
 */
@top Document { (entity | DoctypeDecl)+ }

entity {
  Text |
  EntityReference |
  CharacterReference |
  Ampersand |
  Cdata |
  Element |
  Comment |
  ProcessingInst |
  MismatchedCloseTag |
  incompleteStartCloseTag
}

Element {
  OpenTag entity* (CloseTag | MissingCloseTag) |
  SelfClosingTag
}

@skip { space } {
  OpenTag[closedBy="CloseTag MissingCloseTag"] {
    StartTag TagName Attribute* EndTag
  }

  SelfClosingTag {
    StartTag TagName Attribute* SelfCloseEndTag
  }

  CloseTag[openedBy=OpenTag] {
    StartCloseTag TagName EndTag
  }

  MismatchedCloseTag {
    mismatchedStartCloseTag TagName EndTag
  }

  Attribute {
    AttributeName (Is AttributeValue)?
  }
}

AttributeValue {
  "\"" (doubleQuoteAttributeContent | EntityReference | CharacterReference | Ampersand)* "\"" |
  "'" (singleQuoteAttributeContent | EntityReference | CharacterReference | Ampersand)* "'"
}

Comment { "<!--" commentContent* "-->" }

ProcessingInst { "<?" piContent* "?>" }

Cdata { cdataStart cdataContent* "]]>" }

@context elementContext from "../tokens"

@external tokens startTag from "../tokens" {
  StartTag[closedBy="SelfCloseEndTag EndTag"]
  StartCloseTag
  MissingCloseTag
  mismatchedStartCloseTag[@name=StartCloseTag]
  incompleteStartCloseTag[@name=StartCloseTag]
}

@external tokens commentContent from "../tokens" { commentContent }
@external tokens piContent from "../tokens" { piContent }
@external tokens cdataContent from "../tokens" { cdataContent }
@external tokens textLessThan from "../tokens" { textLessThan }

@tokens {
  EndTag[openedBy="StartTag StartCloseTag"] { ">" }

  SelfCloseEndTag[openedBy=StartTag] { "/>" }

  nameStart {
    ":" | $[a-zA-Z] | "_" |
    $[\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D] |
    $[\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u{10000}-\u{EFFFF}]
  }

  nameChar {
    nameStart | "-" | "." | $[0-9] | $[\u00B7\u0300-\u036F\u203F-\u2040]
  }

  identifier { nameStart nameChar* }

  TagName { identifier }

  AttributeName { identifier }

  singleQuoteAttributeContent { !['&]+ }
  doubleQuoteAttributeContent { !["&]+ }

  Is { "=" }

  // See https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-references
  EntityReference { "&" identifier ";" }

  CharacterReference { ("&#x" $[0-9a-fA-F]+ ";" | "&#" $[0-9]+ ";") }

  Ampersand { "&" }

  @precedence { CharacterReference, EntityReference, Ampersand }

  Text { ("<" space | "<=" | ![<&])+ }

  DoctypeDecl { "<!" ("doctype" | "DOCTYPE") ![>]* ">" }

  cdataStart { "<![" ("cdata" | "CDATA") "[" }

  space { (" " | "\t" | "\r" | "\n")+ }
}

//@external propSource xmlHighlighting from "./highlight"

@detectDelim
