[package]
name = "lib-doenetml-worker-rust"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
description = "DoenetML core worker in rust"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]
web-debug-log = ['doenetml-core/web-debug-log']
web-logging = ['doenetml-core/web']

[dependencies]
# internal dependency
doenetml-core = { path = "../lib-doenetml-core", features = ["web"] }
js-sys = { workspace = true }
web-sys = { workspace = true, features = ["Window", "WorkerGlobalScope"] }
wasm-bindgen = { workspace = true }
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { workspace = true, optional = true }
# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true }
regex = { workspace = true }
tsify-next = { workspace = true }
serde-wasm-bindgen = { workspace = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[lints.clippy]
# Because of https://github.com/rustwasm/wasm-bindgen/issues/3945 we need to allow this lint for now
empty_docs = "allow"
