import { split } from "postcss/lib/list";

export default {
    componentIndex: "Alphabetical Index",
    componentTypes: "Index by Component Type",
    Sample_Component: {
        display: "hidden",
    },
    archive: {
        display: "hidden",
    },
    abs: { title: "abs" },
    alert: { title: "alert" },
    and: { title: "and" },
    angle: { title: "angle" },
    animateFromSequence: { title: "animateFromSequence" },
    answer1: { title: "answer (Basic Use)" },
    answer2a: { title: "answer (Attributes 1)" },
    answer2b: { title: "answer (Attributes 2)" },
    answer3: { title: "answer (Properties)" },
    answer4: { title: "answer (Advanced Use)" },
    aside: { title: "aside" },
    asList: { title: "asList" },
    atom: { title: "atom" },
    attr: { title: "attr" },
    attractTo: { title: "attractTo" },
    attractToGrid: { title: "attractToGrid" },
    award: { title: "award (Basic Use)" },
    award2a: { title: "award (Attributes 1)" },
    award2b: { title: "award (Attributes 2)" },
    award3: { title: "award (Properties)" },
    bestFitLine: { title: "bestFitLine" },
    bezierControls: { title: "bezierControls" },
    boolean: { title: "boolean" },
    booleanInput: { title: "booleanInput" },
    booleanList: { title: "booleanList" },
    c: { title: "c" },
    callAction: { title: "callAction" },
    caption: { title: "caption" },
    case: { title: "case" },
    ceil: { title: "ceil" },
    cell: { title: "cell" },
    choice: { title: "choice" },
    choiceInput: { title: "choiceInput" },
    circle: { title: "circle" },
    clampNumber: { title: "clampNumber" },
    collect: { title: "collect" },
    conditionalContent: { title: "conditionalContent" },
    considerAsResponses: { title: "considerAsResponses" },
    constrainTo: { title: "constrainTo" },
    constrainToGraph: { title: "constrainToGraph" },
    constrainToGrid: { title: "constrainToGrid" },
    constraints: { title: "constraints" },
    constraintUnion: { title: "constraintUnion" },
    controlVectors: { title: "controlVectors" },
    coords: { title: "cooords" },
    curve: { title: "curve" },
    customAttribute: { title: "customAttribute" },
    derivative: { title: "derivative" },
    div: { title: "div" },
    document: { title: "document" },
    ellipsis: { title: "ellipsis" },
    else: { title: "else" },
    endpoint: { title: "endpoint" },
    evaluate: { title: "evaluate" },
    example: { title: "example" },
    exercise: { title: "exercise" },
    extract: { title: "extract" },
    feedback: { title: "feedback" },
    figure: { title: "figure" },
    footnote: { title: "footnote" },
    function: { title: "function" },
    functionIterates: { title: "functionIterates" },
    graph: { title: "graph" },
    group: { title: "group" },
    hint: { title: "hint" },
    image: { title: "image" },
    nbsp: { title: "nbsp" },
    ol: { title: "ol" },
    problem: { title: "problem" },
    ray: { title: "ray" },
    rectangle: { title: "rectangle" },
    ref: { title: "ref" },
    regionBetweenCurveXAxis: { title: "regionBetweenCurveXAxis" },
    row_table: { title: "row (for `<table>`)" },
    sampleRandomNumbers: { title: "sampleRandomNumbers" },
    select: { title: "select" },
    selectFromSequence: { title: "selectFromSequence" },
    selectRandomNumbers: { title: "selectRandomNumbers" },
    setup: { title: "setup" },
    sideBySide: { title: "sideBySide" },
    slider: { title: "slider" },
    solution: { title: "solution" },
    sort: { title: "sort" },
    sources: { title: "sources" },
    split: { title: "split" },
    spreadsheet: { title: "spreadsheet" },
    styleDefinition: { title: "styleDefinition" },
    subsetOfReals: { title: "subsetOfReals" },
    substitute: { title: "substitute" },
    table: { title: "table" },
    tabular: { title: "tabular" },
    template: { title: "template" },
    title: { title: "title" },
    ul: { title: "ul" },
};
