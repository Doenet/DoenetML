import { split } from "postcss/lib/list";

export default {
    componentIndex: "Alphabetical Index",
    componentTypes: "Index by Component Type",
    Sample_Component: {
        display: "hidden",
    },
    archive: {
        display: "hidden",
    },
    abs: { title: "abs" },
    alert: { title: "alert" },
    and: { title: "and" },
    angle: { title: "angle" },
    animateFromSequence: { title: "animateFromSequence" },
    answer1: { title: "answer (Basic Use)" },
    answer2a: { title: "answer (Attributes 1)" },
    answer2b: { title: "answer (Attributes 2)" },
    answer3: { title: "answer (Properties)" },
    answer4: { title: "answer (Advanced Use)" },
    aside: { title: "aside" },
    atom: { title: "atom" },
    attr: { title: "attr" },
    attractTo: { title: "attractTo" },
    attractToGrid: { title: "attractToGrid" },
    award: { title: "award (Basic Use)" },
    award2a: { title: "award (Attributes 1)" },
    award2b: { title: "award (Attributes 2)" },
    award3: { title: "award (Properties)" },
    bestFitLine: { title: "bestFitLine" },
    bezierControls: { title: "bezierControls" },
    boolean: { title: "boolean" },
    booleanInput: { title: "booleanInput" },
    booleanList: { title: "booleanList" },
    c: { title: "c" },
    callAction: { title: "callAction" },
    caption: { title: "caption" },
    case: { title: "case" },
    ceil: { title: "ceil" },
    cell: { title: "cell" },
    choice: { title: "choice" },
    choiceInput: { title: "choiceInput" },
    circle: { title: "circle" },
    clampNumber: { title: "clampNumber" },
    collect: { title: "collect" },
    conditionalContent: { title: "conditionalContent" },
    considerAsResponses: { title: "considerAsResponses" },
    constrainTo: { title: "constrainTo" },
    constrainToGraph: { title: "constrainToGraph" },
    constrainToGrid: { title: "constrainToGrid" },
    constraints: { title: "constraints" },
    constraintUnion: { title: "constraintUnion" },
    controlVectors: { title: "controlVectors" },
    convertSetToList: { title: "convertSetToList" },
    coords: { title: "coords" },
    count: { title: "count" },
    curve: { title: "curve" },
    curve2: { title: "curve (Attributes)" },
    curve3: { title: "curve (Properties)" },
    derivative: { title: "derivative" },
    div: { title: "div" },
    document: { title: "document" },
    ellipsis: { title: "ellipsis" },
    else: { title: "else" },
    em: { title: "em" },
    endpoint: { title: "endpoint" },
    evaluate: { title: "evaluate" },
    example: { title: "example" },
    exercise: { title: "exercise" },
    extractMath: { title: "extractMath" },
    feedback: { title: "feedback" },
    figure: { title: "figure" },
    floor: { title: "floor" },
    footnote: { title: "footnote" },
    function: { title: "function (Basic Use)" },
    function2: { title: "function (Attributes 1)" },
    function3: { title: "function (Attributes 2)" },
    function4: { title: "function (Properties)" },
    functionIterates: { title: "functionIterates" },
    gcd: { title: "gcd" },
    graph: { title: "graph (Page 1)" },
    graph2: { title: "graph (Page 2)" },
    group: { title: "group" },
    hasSameFactoring: { title: "hasSameFactoring" },
    hint: { title: "hint" },
    image: { title: "image" },
    intComma: { title: "intComma" },
    integer: { title: "integer" },
    intersection: { title: "intersection" },
    interval: { title: "interval" },
    intervalList: { title: "intervalList" },
    isBetween: { title: "isBetween" },
    isInteger: { title: "isInteger" },
    isNumber: { title: "isNumber" },
    label: { title: "label" },
    legend: { title: "legend" },
    li: { title: "li" },
    line: { title: "line" },
    lineSegment: { title: "lineSegment" },
    lorem: { title: "lorem" },
    m: { title: "m" },
    matchesPattern: { title: "matchesPattern" },
    math: { title: "math (Page 1)" },
    math2: { title: "math (Page 2)" },
    mathInput: { title: "mathInput" },
    mathList: { title: "mathList" },
    matrix: { title: "matrix" },
    matrixInput: { title: "matrixInput" },
    max: { title: "max" },
    md: { title: "md" },
    mdn: { title: "mdn" },
    me: { title: "me" },
    mean: { title: "mean" },
    median: { title: "median" },
    men: { title: "men" },
    min: { title: "min" },
    mod: { title: "mod" },
    module: { title: "module" },
    moduleAttributes: { title: "moduleAttributes" },
    mrow: { title: "mrow" },
    nbsp: { title: "nbsp" },
    not: { title: "not" },
    number: { title: "number" },
    numberList: { title: "numberList" },
    odeSystem: { title: "odeSystem" },
    ol: { title: "ol" },
    option: { title: "option" },
    or: { title: "or" },
    orbitalDiagramInput: { title: "orbitalDiagramInput" },
    p: { title: "p" },
    parabola: { title: "parabola" },
    piecewiseFunction: { title: "piecewiseFunction" },
    point: { title: "point" },
    polygon: { title: "polygon" },
    polyline: { title: "polyline" },
    pre: { title: "pre" },
    problem: { title: "problem" },
    product: { title: "product" },
    proof: { title: "proof" },
    question: { title: "question" },
    ray: { title: "ray" },
    rectangle: { title: "rectangle" },
    ref: { title: "ref" },
    regionBetweenCurveXAxis: { title: "regionBetweenCurveXAxis" },
    regularPolygon: { title: "regularPolygon" },
    repeat: { title: "repeat" },
    round: { title: "round" },
    row_matrix: { title: "row (for `<matrix>{:dn}`" },
    row_table: { title: "row (for `<table>{:dn}`)" },
    samplePrimeNumbers: { title: "samplePrimeNumbers" },
    sampleRandomNumbers: { title: "sampleRandomNumbers" },
    sbsGroup: { title: "sbsGroup" },
    section: { title: "section" },
    select: { title: "select" },
    selectFromSequence: { title: "selectFromSequence" },
    selectPrimeNumbers: { title: "selectPrimeNumbers" },
    selectRandomNumbers: { title: "selectRandomNumbers" },
    sequence: { title: "sequence" },
    setSmallToZero: { title: "setSmallToZero" },
    setup: { title: "setup" },
    shuffle: { title: "shuffle" },
    sideBySide: { title: "sideBySide" },
    sign: { title: "sign" },
    slider: { title: "slider" },
    solution: { title: "solution" },
    sort: { title: "sort" },
    sources: { title: "sources" },
    split: { title: "split" },
    spreadsheet: { title: "spreadsheet" },
    stack: { title: "stack" },
    standardDeviation: { title: "standardDeviation" },
    statement: { title: "statement" },
    styleDefinition: { title: "styleDefinition" },
    styleDefinitions: { title: "styleDefinitions" },
    subsetOfReals: { title: "subsetOfReals" },
    substitute: { title: "substitute" },
    sum: { title: "sum" },
    table: { title: "table" },
    tabular: { title: "tabular" },
    tag: { title: "tag" },
    template: { title: "template" },
    term: { title: "term" },
    text: { title: "text" },
    textInput: { title: "textInput" },
    textList: { title: "textList" },
    title: { title: "title" },
    triangle: { title: "triangle" },
    triggerSet: { title: "triggerSet" },
    ul: { title: "ul" },
    updateValue: { title: "updateValue" },
    variance: { title: "variance" },
    vector: { title: "vector" },
    video: { title: "video" },
    when: { title: "when" },
    wrapNumberPeriodic: { title: "wrapNumberPeriodic" },
    xLabel: { title: "xLabel" },
    xor: { title: "xor" },
    yLabel: { title: "yLabel" },
};
